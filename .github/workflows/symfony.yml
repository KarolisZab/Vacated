# GitHub Action for Symfony with PostgreSQL
name: Testing Symfony with PostgreSQL

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    
jobs:
  symfony:
    name: Symfony
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16.1
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 3
        
    strategy:
      fail-fast: true
      
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          tools: phpstan, phpcs, codeception
          extensions: mbstring, xml, ctype, iconv, intl, pgsql, pdo_pgsql
          coverage: xdebug

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader

      - name: Run Migration
        run: |
          php bin/console doctrine:database:create --env=test || echo "db exists"
          php bin/console doctrine:migrations:migrate --env=test --no-interaction
          php bin/console doctrine:fixtures:load --env=test --no-interaction
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:${{ job.services.postgres.ports[5432] }}/vacated_test?serverVersion=16&charset=utf8

      - name: Execute PHPStan.
        run: composer analyse

      - name: Execute Lint
        run: composer lint

      - name: Install ESLint
        run: yarn add eslint

      - name: Run ESLint
        run: yarn run eslint . --config .eslintrc.js

      - name: Execute Codeception tests
        run: vendor/bin/codecept run
        env: 
          DATABASE_URL: postgresql://postgres:postgres@localhost:${{ job.services.postgres.ports[5432] }}/vacated_test?serverVersion=16&charset=utf8
