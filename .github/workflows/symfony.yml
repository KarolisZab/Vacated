# GitHub Action for Symfony with PostgreSQL
name: Testing Symfony with PostgreSQL

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    
jobs:
  symfony:
    name: Symfony
    runs-on: ubuntu-latest

    # Docs: https://docs.github.com/en/actions/using-containerized-services
    services:
      postgres:
        image: postgres:16.1
        env:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: root
          POSTGRES_DB: vacated_test
        ports:
          - 5432/tcp
          #- 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 3
        
    strategy:
      fail-fast: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Docs: https://github.com/shivammathur/setup-php
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          tools: phpstan, phpcs, codeception
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, pgsql, pdo_pgsql
          coverage: xdebug

      # Local PostgreSQL service in GitHub hosted environments is disabled by default.
      # If you are using it instead of service containers, make sure you start it.
      # - name: Start postgresql service
      #   run: sudo systemctl start postgresql.service

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          # Use composer.json for key, if composer.lock is not committed.
          # key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader

      - name: Run Migration
        run: |
          composer require --dev symfony/orm-pack
          php bin/console doctrine:database:create --env=test || echo "db exists"
          php bin/console doctrine:migrations:migrate --env=test --no-interaction
        env:
          DATABASE_URL: postgresql://root:root@127.0.0.1:${{ job.services.postgres.ports[5432] }}/vacated_test?serverVersion=16&charset=utf8

      - name: Execute PHPStan.
        run: composer analyse

      - name: Execute Lint
        run: composer lint

      - name: Get directory
        run: ls

      - name: Execute Codeception tests
        run: ./vendor/bin/codecept run
